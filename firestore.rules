rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Colección de Usuarios
    match /users/{userId} {
      allow read: if request.auth != null; // Cualquiera autenticado puede leer perfiles (para buscar colaboradores, etc.)
      allow write: if request.auth != null && request.auth.uid == userId; // Solo el propio usuario puede escribir en su perfil
      allow create: if request.auth != null; // Permitir creación si está autenticado (ej. al registrarse)
    }

    // Colección de Proyectos
    match /projects/{projectId} {
      // Permitir a usuarios autenticados listar todos los proyectos para la búsqueda del lado del cliente
      allow list: if request.auth != null; 

      allow read: if 
        resource.data.isPublic == true || 
        (request.auth != null && (
          request.auth.uid == resource.data.ownerId ||
          (resource.data.collaborators is list && request.auth.uid in resource.data.collaborators)
        ));
      
      allow create: if request.auth != null && request.auth.uid == request.resource.data.ownerId;
      
      allow update: if request.auth != null && (
        request.auth.uid == resource.data.ownerId || 
        (resource.data.collaborators is list && request.auth.uid in resource.data.collaborators)
      );
      
      allow delete: if request.auth != null && request.auth.uid == resource.data.ownerId;
    }

    // Colección de Tareas
    match /tasks/{taskId} {
      // Permitir a usuarios autenticados listar todas las tareas para la búsqueda del lado del cliente
      allow list: if request.auth != null;

      allow read: if (
        // Proyecto público
        get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.isPublic == true
        // O usuario autenticado y cumple algún rol
        || (
          request.auth != null &&
          (
            // Dueño del proyecto
            get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.ownerId == request.auth.uid
            // Colaborador
            || (get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.collaborators is list
                && request.auth.uid in get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.collaborators)
            // Creador de la tarea
            || resource.data.creatorId == request.auth.uid
            // Asignado a la tarea
            || (resource.data.assignedTo != null && resource.data.assignedTo == request.auth.uid)
          )
        )
      );

      allow create: if request.auth != null && (
        // Dueño del proyecto de la tarea
        get(/databases/$(database)/documents/projects/$(request.resource.data.projectId)).data.ownerId == request.auth.uid ||
        // Colaborador en el proyecto de la tarea
        (get(/databases/$(database)/documents/projects/$(request.resource.data.projectId)).data.collaborators is list &&
         request.auth.uid in get(/databases/$(database)/documents/projects/$(request.resource.data.projectId)).data.collaborators)
      );
      
      allow update: if request.auth != null && (
        // Dueño del proyecto
        get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.ownerId == request.auth.uid ||
        // Colaborador en el proyecto
        (get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.collaborators is list &&
         request.auth.uid in get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.collaborators) ||
        // Creador de la tarea (puede actualizar su propia tarea)
        resource.data.creatorId == request.auth.uid ||
        // Asignado a la tarea (puede actualizar estado, etc.)
        (resource.data.assignedTo != null && resource.data.assignedTo == request.auth.uid)
      );
      
      allow delete: if request.auth != null && (
        // Dueño del proyecto
        get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.ownerId == request.auth.uid ||
        // Creador de la tarea
        resource.data.creatorId == request.auth.uid
      );
    }

    // Colección de Notificaciones
    match /notifications/{notificationId} {
      allow read, write, create, delete: if request.auth != null && 
                                      (request.auth.uid == resource.data.ownerId || // El dueño del proyecto (target de la notif de solicitud)
                                       request.auth.uid == resource.data.requesterId || // El que pide unirse
                                       request.auth.uid == resource.data.userId); // El destinatario de una notificación genérica
    }
  }
}